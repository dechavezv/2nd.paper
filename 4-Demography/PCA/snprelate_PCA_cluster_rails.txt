##### Load libraries

library(gdsfmt)
library(SNPRelate)
library(ggplot2)
library(RColorBrewer)

##### Set working directory?
todaysdate=format(Sys.Date(),format="%Y%m%d")
calldate=20200410
setwd("/u/scratch/d/dechavez/rails.project/bams/Daniel.2020/bam/VCF")
plotoutdir=paste("/u/scratch/d/dechavez/rails.project/bams/Daniel.2020/bam/VCF",calldate,"/PCA/",sep="")
dir.create(plotoutdir,recursive = T)

#### Combine GDS  with different samples into a single file
#snpgdsCombineGeno(c("Reheader_01_FastqToSam.bam_Aligned.MarkDup_Filtered_passingSNPs.gds", 
#"Reheader_02_FastqToSam.bam_Aligned.MarkDup_Filtered_passingSNPs.gds",
#"Reheader_03_FastqToSam.bam_Aligned.MarkDup_Filtered_passingSNPs.gds",
#"Reheader_04_FastqToSam.bam_Aligned.MarkDup_Filtered_passingSNPs.gds",
#"Reheader_05_FastqToSam.bam_Aligned.MarkDup_Filtered_passingSNPs.gds",
#"Reheader_06_FastqToSam.bam_Aligned.MarkDup_Filtered_passingSNPs.gds",
#"Reheader_07_FastqToSam.bam_Aligned.MarkDup_Filtered_passingSNPs.gds",
#"Reheader_08_FastqToSam.bam_Aligned.MarkDup_Filtered_passingSNPs.gds"), 
#"Concat_FastqToSam.bam_Aligned.MarkDup_Filtered_passingSNPs.gds",same.strand=TRUE)

snpgdsSummary("Reheader_08_FastqToSam.bam_Aligned.MarkDup_Filtered_passingSNPs.gds")

######## Specify individuals ############################################3

sample.list=c("LS05","LS09","LS21","LS29","LS34",
"LS35","LS49","LS57")

snpgdsCreateGenoSet("Reheader_08_FastqToSam.bam_Aligned.MarkDup_Filtered_passingSNPs.gds", "Concat_FastqToSam.bam_Aligned.MarkDup_Filtered_passingSNPs_Inds.gds", sample.id=sample.list)

genofile <- snpgdsOpen("Reheader_08_FastqToSam.bam_Aligned.MarkDup_Filtered_passingSNPs_Inds.gds")

##### Prune SNPs based on LD

set.seed(1000)
snpset <- snpgdsLDpruning(genofile, ld.threshold=.2,maf=0.1)
snpset.id <- unlist(snpset)
#ld.threshold=.2,maf=0.1

snpgdsCreateGenoSet("Reheader_08_FastqToSam.bam_Aligned.MarkDup_Filtered_passingSNPs_Inds.gds", "Concat_FastqToSam.bam_Aligned.MarkDup_Filtered_passingSNPs_Inds_pruned.gds", snp.id=snpset.id)


##### Close old genofile, open new genofile

snpgdsClose(genofile)

genofile <- snpgdsOpen("Concat_FastqToSam.bam_Aligned.MarkDup_Filtered_passingSNPs_Inds_pruned.gds")


##### Add population information

pop_code=c("St.Cruz","St.Cruz","Isabela", "Isabela",
"Isabela", "Pinta", "Pinta", "Santiago", "Santiago")

#pop_code <- read.gdsn(index.gdsn(genofile, "sample.annot/pop.group")) # <- doesn't work

##### Run PCA

# pca <- snpgdsPCA(genofile, snp.id=snpset.id, num.thread=1)
pca <- snpgdsPCA(genofile, num.thread=1)

pc.percent <- pca$varprop*100

# head(round(pc.percent, 2))

tab <- data.frame(sample.id = pca$sample.id,
    EV1 = pca$eigenvect[,1],
    EV2 = pca$eigenvect[,2],
    EV3 = pca$eigenvect[,3],
    EV4 = pca$eigenvect[,4],
    stringsAsFactors = FALSE)

write.table(tab, file="Rails_concat_Masked_Filter_passingSNPs_Inds_prune_PCA_1_2_3_4.txt", col.names=T, row.names=F, quote=F, sep='\t')

pdf("Rails_concat_Masked_Filter_passingSNPs_Inds_prune_PCA_1_2.pdf", width=6, height=6)

plot(tab$EV2, tab$EV1, xlab="eigenvector 2", ylab="eigenvector 1")

dev.off()


##### Plot the first 4 PCs against each other

lbls <- paste("PC", 1:4, "\n", format(pc.percent[1:4], digits=2), "%", sep="")

pdf("Rails_concat_Masked_Filter_passingSNPs_Inds_prune_PCA_1_2_3_4.pdf", width=6, height=6)

pairs(pca$eigenvect[,1:4], labels=lbls)

dev.off()

########### pop map ########

#population information
popmap = read.table("/u/scratch/d/dechavez/rails.project/bams/Daniel.2020/bam/VCF/list.sample.rails.txt",header=T) # this includes the RWAB samples
sample.id = as.character(popmap$Sample)
pop1_code = as.character(popmap$PrimaryPop)

#make a data.frame
tab1a <- data.frame(sample.id = pca$sample.id, pop1 = factor(pop1_code)[match(pca$sample.id, sample.id)],
    EV1 = pca$eigenvect[,1],
    EV2 = pca$eigenvect[,2],
    EV3 = pca$eigenvect[,3],
    EV4 = pca$eigenvect[,4],
    stringsAsFactors = FALSE)

#head(tab1a)

############### set up your colors -- keep this consistent across all plots ######

colorPal=RColorBrewer::brewer.pal(n=8,name = "Dark2")

colors=list(St.Cruz=colorPal[1],Isabela=colorPal[3],Santiago=colorPal[5],
Pinta=colorPal[8]) # your population colors


#plot first 2 pc coloring by primary population
p1a <- ggplot(tab1a,aes(x=EV1,y=EV2,color=pop1))+
  geom_point(size=3)+
  theme_bw()+
  ylab(paste("PC1", format(pc.percent[1], digits=2),"%", sep=""))+
  xlab(paste("PC2", format(pc.percent[2], digits=2),"%", sep=""))+
  ggtitle(paste("PCA based on ",as.character(length(pca$snp.id))," LD Pruned SNPs",sep=""))+
  theme(legend.title = element_blank(),axis.text = element_text(size=14),
  axis.title = element_text(size=14),legend.text = element_text(size=14))+
  scale_shape_manual(values=c(1,16))+
  scale_color_manual(values=unlist(colors))

# paste("PC", 1:4, "\n", format(pc.percent[1:4], digits=2), "%", sep="")

#p1a
ggsave(paste(plotoutdir,"/PCA.ConcatRails.",todaysdate,".pdf",sep=""),p1a,device="pdf",width = 8,height=5)


##### Create cluster dendrogram

set.seed(100)

ibs.hc <- snpgdsHCluster(snpgdsIBS(genofile, num.thread=1))

rv <- snpgdsCutTree(ibs.hc)

pdf("NA_Clup_47_joint_chrALL_TrimAlt_Annot_VEP_Masked_Filter_passingSNPs_removeInds_noprune_IBScluster.pdf", width=8, height=12)

plot(rv$dendrogram, main="SNPRelate Clustering")

dev.off()

#PCA wuth Hihg coverage indiv


